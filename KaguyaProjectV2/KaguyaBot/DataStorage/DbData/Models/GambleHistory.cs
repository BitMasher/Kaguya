using Humanizer;
using KaguyaProjectV2.KaguyaBot.Core.Interfaces;
using LinqToDB.Mapping;

namespace KaguyaProjectV2.KaguyaBot.DataStorage.DbData.Models
{
    [Table(Name = "gamblehistory")]
    public class GambleHistory : IKaguyaQueryable<GambleHistory>, IUserSearchable<GambleHistory>
    {
        [Column(Name = "UserId")]
        [NotNull]
        public ulong UserId { get; set; }

        [Column(Name = "Action")]
        [NotNull]
        public GambleAction Action { get; set; }

        [Column(Name = "ActionString")]
        [NotNull]
        public string ActionString => Action.Humanize(LetterCasing.AllCaps);

        [Column(Name = "Bet")]
        [NotNull]
        public int Bet { get; set; }

        /// <summary>
        /// The payout, or winnings of the gamble.
        /// This value can be 0 if it was a loss (we know they lost their points).
        /// </summary>
        [Column(Name = "Payout")]
        [NotNull]
        public int Payout { get; set; }

        /// <summary>
        /// The roll, generated by the program, that determines whether the user wins (and/or by how much).
        /// </summary>
        [Column(Name = "Roll")]
        [NotNull]
        public int Roll { get; set; }

        /// <summary>
        /// The time at which the gamble was made.
        /// </summary>
        [Column(Name = "Time")]
        [NotNull]
        public double Time { get; set; }

        /// <summary>
        /// Was the user a winner?
        /// </summary>
        [Column(Name = "Winner")]
        [NotNull]
        public bool Winner { get; set; }

        /// <summary>
        /// FK_KaguyaUser_GambleHistory
        /// </summary>
        [Association(ThisKey = "UserId", OtherKey = "Id", CanBeNull = false)]
        public User User { get; set; }
    }

    public enum GambleAction
    {
        BET_ROLL,
        DICE_ROLL,
        POKER
    }
}